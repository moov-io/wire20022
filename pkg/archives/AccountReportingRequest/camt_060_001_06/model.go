// Code generated by GoComply XSD2Go for Moov; DO NOT EDIT.
// Models for urn:iso:std:iso:20022:tech:xsd:camt.060.001.06
package camt_060_001_06

import (
	"encoding/xml"
	"time"

	"github.com/moov-io/fedwire20022/pkg/fedwire"
)

// XSD Elements

type Document struct {
	XMLName xml.Name

	AcctRptgReq AccountReportingRequestV06 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 AcctRptgReq"`
}

// XSD ComplexType declarations

type AccountIdentification4Choice struct {
	IBAN *IBAN2007Identifier            `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 IBAN,omitempty"`
	Othr *GenericAccountIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Othr,omitempty"`
}

type AccountReportingRequestV06 struct {
	GrpHdr      GroupHeader77         `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 GrpHdr"`
	RptgReq     []ReportingRequest6   `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 RptgReq"`
	SplmtryData []*SupplementaryData1 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 SplmtryData,omitempty"`
}

type AccountSchemeName1Choice struct {
	Cd    *ExternalAccountIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Cd,omitempty"`
	Prtry *Max35Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Prtry,omitempty"`
}

type ActiveOrHistoricCurrencyAndAmount struct {
	Value ActiveOrHistoricCurrencyAndAmountSimpleType `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode                `xml:"Ccy,attr"`
}

type AddressType3Choice struct {
	Cd    *AddressType2Code        `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Cd,omitempty"`
	Prtry *GenericIdentification30 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Prtry,omitempty"`
}

type BalanceSubType1Choice struct {
	Cd    *ExternalBalanceSubType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Cd,omitempty"`
	Prtry *Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Prtry,omitempty"`
}

type BalanceType10Choice struct {
	Cd    *ExternalBalanceType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Cd,omitempty"`
	Prtry *Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Prtry,omitempty"`
}

type BalanceType13 struct {
	CdOrPrtry BalanceType10Choice    `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 CdOrPrtry"`
	SubTp     *BalanceSubType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 SubTp,omitempty"`
}

type BranchAndFinancialInstitutionIdentification6 struct {
	FinInstnId FinancialInstitutionIdentification18 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 FinInstnId"`
	BrnchId    *BranchData3                         `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 BrnchId,omitempty"`
}

type BranchData3 struct {
	Id      *Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Id,omitempty"`
	LEI     *LEIIdentifier   `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 LEI,omitempty"`
	Nm      *Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Nm,omitempty"`
	PstlAdr *PostalAddress24 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 PstlAdr,omitempty"`
}

type CashAccount40 struct {
	Id   *AccountIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Id,omitempty"`
	Tp   *CashAccountType2Choice       `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Tp,omitempty"`
	Ccy  *ActiveOrHistoricCurrencyCode `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Ccy,omitempty"`
	Nm   *Max70Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Nm,omitempty"`
	Prxy *ProxyAccountIdentification1  `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Prxy,omitempty"`
}

type CashAccountType2Choice struct {
	Cd    *ExternalCashAccountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Cd,omitempty"`
	Prtry *Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Prtry,omitempty"`
}

type ClearingSystemIdentification2Choice struct {
	Cd    *ExternalClearingSystemIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Cd,omitempty"`
	Prtry *Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Prtry,omitempty"`
}

type ClearingSystemMemberIdentification2 struct {
	ClrSysId *ClearingSystemIdentification2Choice `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 ClrSysId,omitempty"`
	MmbId    Max35Text                            `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 MmbId"`
}

type Contact4 struct {
	NmPrfx    *NamePrefix2Code             `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 NmPrfx,omitempty"`
	Nm        *Max140Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Nm,omitempty"`
	PhneNb    *PhoneNumber                 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 PhneNb,omitempty"`
	MobNb     *PhoneNumber                 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 MobNb,omitempty"`
	FaxNb     *PhoneNumber                 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 FaxNb,omitempty"`
	EmailAdr  *Max2048Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 EmailAdr,omitempty"`
	EmailPurp *Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 EmailPurp,omitempty"`
	JobTitl   *Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 JobTitl,omitempty"`
	Rspnsblty *Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Rspnsblty,omitempty"`
	Dept      *Max70Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Dept,omitempty"`
	Othr      []*OtherContact1             `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Othr,omitempty"`
	PrefrdMtd *PreferredContactMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 PrefrdMtd,omitempty"`
}

type DateAndPlaceOfBirth1 struct {
	BirthDt     fedwire.ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 BirthDt"`
	PrvcOfBirth *Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 PrvcOfBirth,omitempty"`
	CityOfBirth Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 CityOfBirth"`
	CtryOfBirth CountryCode     `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 CtryOfBirth"`
}

type DatePeriod3 struct {
	FrDt fedwire.ISODate  `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 FrDt"`
	ToDt *fedwire.ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 ToDt,omitempty"`
}

type EntryStatus1Choice struct {
	Cd    *ExternalEntryStatus1Code `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Cd,omitempty"`
	Prtry *Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Prtry,omitempty"`
}

type FinancialIdentificationSchemeName1Choice struct {
	Cd    *ExternalFinancialInstitutionIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Cd,omitempty"`
	Prtry *Max35Text                                       `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Prtry,omitempty"`
}

type FinancialInstitutionIdentification18 struct {
	BICFI       *BICFIDec2014Identifier              `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 BICFI,omitempty"`
	ClrSysMmbId *ClearingSystemMemberIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 ClrSysMmbId,omitempty"`
	LEI         *LEIIdentifier                       `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 LEI,omitempty"`
	Nm          *Max140Text                          `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Nm,omitempty"`
	PstlAdr     *PostalAddress24                     `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 PstlAdr,omitempty"`
	Othr        *GenericFinancialIdentification1     `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Othr,omitempty"`
}

type GenericAccountIdentification1 struct {
	Id      Max34Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Id"`
	SchmeNm *AccountSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 SchmeNm,omitempty"`
	Issr    *Max35Text                `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Issr,omitempty"`
}

type GenericFinancialIdentification1 struct {
	Id      Max35Text                                 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Id"`
	SchmeNm *FinancialIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 SchmeNm,omitempty"`
	Issr    *Max35Text                                `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Issr,omitempty"`
}

type GenericIdentification30 struct {
	Id      Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Id"`
	Issr    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Issr"`
	SchmeNm *Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 SchmeNm,omitempty"`
}

type GenericOrganisationIdentification1 struct {
	Id      Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Id"`
	SchmeNm *OrganisationIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 SchmeNm,omitempty"`
	Issr    *Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Issr,omitempty"`
}

type GenericPersonIdentification1 struct {
	Id      Max35Text                              `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Id"`
	SchmeNm *PersonIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 SchmeNm,omitempty"`
	Issr    *Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Issr,omitempty"`
}

type GroupHeader77 struct {
	MsgId   Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 MsgId"`
	CreDtTm fedwire.ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 CreDtTm"`
	MsgSndr *Party40Choice      `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 MsgSndr,omitempty"`
}

type Limit2 struct {
	Amt       ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Amt"`
	CdtDbtInd FloorLimitType1Code               `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 CdtDbtInd"`
}

type OrganisationIdentification29 struct {
	AnyBIC *AnyBICDec2014Identifier              `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 AnyBIC,omitempty"`
	LEI    *LEIIdentifier                        `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 LEI,omitempty"`
	Othr   []*GenericOrganisationIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Othr,omitempty"`
}

type OrganisationIdentificationSchemeName1Choice struct {
	Cd    *ExternalOrganisationIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Cd,omitempty"`
	Prtry *Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Prtry,omitempty"`
}

type OtherContact1 struct {
	ChanlTp Max4Text    `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 ChanlTp"`
	Id      *Max128Text `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Id,omitempty"`
}

type Party38Choice struct {
	OrgId  *OrganisationIdentification29 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 OrgId,omitempty"`
	PrvtId *PersonIdentification13       `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 PrvtId,omitempty"`
}

type Party40Choice struct {
	Pty *PartyIdentification135                       `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Pty,omitempty"`
	Agt *BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Agt,omitempty"`
}

type PartyIdentification135 struct {
	Nm        *Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Nm,omitempty"`
	PstlAdr   *PostalAddress24 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 PstlAdr,omitempty"`
	Id        *Party38Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Id,omitempty"`
	CtryOfRes *CountryCode     `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 CtryOfRes,omitempty"`
	CtctDtls  *Contact4        `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 CtctDtls,omitempty"`
}

type PersonIdentification13 struct {
	DtAndPlcOfBirth *DateAndPlaceOfBirth1           `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 DtAndPlcOfBirth,omitempty"`
	Othr            []*GenericPersonIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Othr,omitempty"`
}

type PersonIdentificationSchemeName1Choice struct {
	Cd    *ExternalPersonIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Cd,omitempty"`
	Prtry *Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Prtry,omitempty"`
}

type PostalAddress24 struct {
	AdrTp       *AddressType3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 AdrTp,omitempty"`
	Dept        *Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Dept,omitempty"`
	SubDept     *Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 SubDept,omitempty"`
	StrtNm      *Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 StrtNm,omitempty"`
	BldgNb      *Max16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 BldgNb,omitempty"`
	BldgNm      *Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 BldgNm,omitempty"`
	Flr         *Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Flr,omitempty"`
	PstBx       *Max16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 PstBx,omitempty"`
	Room        *Max70Text          `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Room,omitempty"`
	PstCd       *Max16Text          `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 PstCd,omitempty"`
	TwnNm       *Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 TwnNm,omitempty"`
	TwnLctnNm   *Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 TwnLctnNm,omitempty"`
	DstrctNm    *Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 DstrctNm,omitempty"`
	CtrySubDvsn *Max35Text          `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 CtrySubDvsn,omitempty"`
	Ctry        *CountryCode        `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Ctry,omitempty"`
	AdrLine     []*Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 AdrLine,omitempty"`
}

type ProxyAccountIdentification1 struct {
	Tp *ProxyAccountType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Tp,omitempty"`
	Id Max2048Text              `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Id"`
}

type ProxyAccountType1Choice struct {
	Cd    *ExternalProxyAccountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Cd,omitempty"`
	Prtry *Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Prtry,omitempty"`
}

type ReportingPeriod5 struct {
	FrToDt DatePeriod3         `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 FrToDt"`
	FrToTm *TimePeriodDetails1 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 FrToTm,omitempty"`
	Tp     QueryType3Code      `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Tp"`
}

type ReportingRequest6 struct {
	Id          *Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Id,omitempty"`
	ReqdMsgNmId Max35Text                                     `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 ReqdMsgNmId"`
	Acct        *CashAccount40                                `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Acct,omitempty"`
	AcctOwnr    Party40Choice                                 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 AcctOwnr"`
	AcctSvcr    *BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 AcctSvcr,omitempty"`
	RptgPrd     *ReportingPeriod5                             `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 RptgPrd,omitempty"`
	RptgSeq     *SequenceRange1Choice                         `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 RptgSeq,omitempty"`
	ReqdTxTp    *TransactionType2                             `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 ReqdTxTp,omitempty"`
	ReqdBalTp   []*BalanceType13                              `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 ReqdBalTp,omitempty"`
}

type SequenceRange1 struct {
	FrSeq Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 FrSeq"`
	ToSeq Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 ToSeq"`
}

type SequenceRange1Choice struct {
	FrSeq   *Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 FrSeq,omitempty"`
	ToSeq   *Max35Text       `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 ToSeq,omitempty"`
	FrToSeq []SequenceRange1 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 FrToSeq"`
	EQSeq   []Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 EQSeq"`
	NEQSeq  []Max35Text      `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 NEQSeq"`
}

type SupplementaryData1 struct {
	PlcAndNm *Max350Text                `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type TimePeriodDetails1 struct {
	FrTm ISOTime  `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 FrTm"`
	ToTm *ISOTime `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 ToTm,omitempty"`
}

type TransactionType2 struct {
	Sts       EntryStatus1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 Sts"`
	CdtDbtInd CreditDebitCode    `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 CdtDbtInd"`
	FlrLmt    []*Limit2          `xml:"urn:iso:std:iso:20022:tech:xsd:camt.060.001.06 FlrLmt,omitempty"`
}

// XSD SimpleType declarations

type ActiveOrHistoricCurrencyAndAmountSimpleType fedwire.Amount

type ActiveOrHistoricCurrencyCode string

type AddressType2Code string

const AddressType2CodeAddr AddressType2Code = "ADDR"
const AddressType2CodePbox AddressType2Code = "PBOX"
const AddressType2CodeHome AddressType2Code = "HOME"
const AddressType2CodeBizz AddressType2Code = "BIZZ"
const AddressType2CodeMlto AddressType2Code = "MLTO"
const AddressType2CodeDlvy AddressType2Code = "DLVY"

type AnyBICDec2014Identifier string

type BICFIDec2014Identifier string

type CountryCode string

type CreditDebitCode string

const CreditDebitCodeCrdt CreditDebitCode = "CRDT"
const CreditDebitCodeDbit CreditDebitCode = "DBIT"

type Exact4AlphaNumericText string

type ExternalAccountIdentification1Code string

type ExternalBalanceSubType1Code string

type ExternalBalanceType1Code string

type ExternalCashAccountType1Code string

type ExternalClearingSystemIdentification1Code string

type ExternalEntryStatus1Code string

type ExternalFinancialInstitutionIdentification1Code string

type ExternalOrganisationIdentification1Code string

type ExternalPersonIdentification1Code string

type ExternalProxyAccountType1Code string

type FloorLimitType1Code string

const FloorLimitType1CodeCred FloorLimitType1Code = "CRED"
const FloorLimitType1CodeDebt FloorLimitType1Code = "DEBT"
const FloorLimitType1CodeBoth FloorLimitType1Code = "BOTH"

type IBAN2007Identifier string

type ISOTime time.Time

type LEIIdentifier string

type Max128Text string

type Max140Text string

type Max16Text string

type Max2048Text string

type Max34Text string

type Max350Text string

type Max35Text string

type Max4Text string

type Max70Text string

type NamePrefix2Code string

const NamePrefix2CodeDoct NamePrefix2Code = "DOCT"
const NamePrefix2CodeMadm NamePrefix2Code = "MADM"
const NamePrefix2CodeMiss NamePrefix2Code = "MISS"
const NamePrefix2CodeMist NamePrefix2Code = "MIST"
const NamePrefix2CodeMiks NamePrefix2Code = "MIKS"

type PhoneNumber string

type PreferredContactMethod1Code string

const PreferredContactMethod1CodeLett PreferredContactMethod1Code = "LETT"
const PreferredContactMethod1CodeMail PreferredContactMethod1Code = "MAIL"
const PreferredContactMethod1CodePhon PreferredContactMethod1Code = "PHON"
const PreferredContactMethod1CodeFaxx PreferredContactMethod1Code = "FAXX"
const PreferredContactMethod1CodeCell PreferredContactMethod1Code = "CELL"

type QueryType3Code string

const QueryType3CodeAlll QueryType3Code = "ALLL"
const QueryType3CodeChng QueryType3Code = "CHNG"
const QueryType3CodeModf QueryType3Code = "MODF"
